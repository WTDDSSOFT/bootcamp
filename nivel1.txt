Estrutura e padrões.

aula 1
***************************************
yarn add express
yarn add typescript -D
yarn tsc --init
yarn tsc
yarn add @types/express -D

❯ yarn add ts-node-dev -D mesmo que o nodemon e o tsc, converte pra js
, porem para projetos com ts

steup in packege.json.
"dev:server": "ts-node-dev src/serve.ts"
***************************************
lecture 2
editorConfig.
***************************************

lecture 3
automatizando os padrões de codigo.
eslint
❯ yarn add eslint -D
❯ yarn eslint --init
instalação de pakages que o eslint need
yarn add -D @typescript-eslint/eslint-plugin@latest eslint-config-airbnb-base@latest  eslint-plugin-import@^2.20.1 @typescript-eslint/parser@latest
***************************************

lecture 4
routes
❯ yarn add -D eslint-import-resolver-typescript- possiblita o codigo enteder importações em ts
configuração para enteder as import de ts sem o .ts
 "rules": {
    "import/extensions":[
      "error",
      "ignorePackages",
      {
        "ts":"never"
      }
    ]
  },

configuração de habilita o codigo de enteder impors de aqurivos ts
  "settings":{
    "import/resolver":{
      "typescript":{}
    }
  }

lecutre 5
prettier setup in project
confit prettier in project
yarn add prettier eslint-config-prettier eslint-plugin-prettier -D

packege.json config.

 >dd some rules on eslint.
  "extends": [
    "airbnb-base",
    "plugin:@typescript-eslint/recommended",
    "prettier/@typescript-eslint",
    "plugin:prettier/recommended"

  ],
 "plugins": [
    "@typescript-eslint",
    "prettier"
  ],
  "rules": {
    "prettier/prettier":"error",
    "import/extensions":[
      "error",
      "ignorePackages",
      {
        "ts":"never"
      }
    ]
  },

//config de "" para ''
module.exports={
  sigleQuote:true,
  trailingComma:'all',
  arrowParens:'avoid',
};
***************************************
lecture 6
lear debug.
config
  "request": "attach",//atacha quando eu roda o debug
  "protocol": "inspector",// inspecionar o node.
  "restart": true,
